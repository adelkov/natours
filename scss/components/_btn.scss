/*by these pseudo classes this will target both states of anchor tag*/
.btn {
  &,
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    position: relative;
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;

    &::after {
      background-color: white;
    }
  }

  &--green {
    background-color: $color-primary-dark;
    color: $color-white;

    &::after {
      background-color: $color-primary-dark;
    }
  }

  &:hover {
    box-shadow: 0 1rem 2rem rgba($color-black, .2);
    transform: translateY(-5px);

    &::after {
      transform: scaleX(1.5) scaleY(1.6);
      opacity: 0;
    }
  }

  &:active, &:focus {
    outline: none;
    transform: translateY(-3px);

  }

  &::after {
    content: '';
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
  }

  &--animated {
    animation: moveInBottom 1s;
    animation-delay: .4s;
    /*0% style before animation starts*/
    animation-fill-mode: backwards;

  }
}

.btn-text {
  &:link, &:visited {
    color: $color-primary-light;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $color-primary-light;
    padding: 3px;
    transition: all .2s;
  }

  &:hover {
    border: none;
    background-color: #28b485;
    color: $color-white;
    box-shadow: 0 1rem 2rem rgba($color-primary-light, .2);
    transform: translateY(-2px);
  }

  &:active {
    box-shadow: 0 .5rem 1rem rgba($color-primary-light, .2);
    transform: translateY(0);
  }
}

